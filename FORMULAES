Formulaes are algebric expressions that can have as variables the column names that contain neumeric values, numbers, and allowed operators.

Allowed operators::
'(', ')', '^' , '*', '/', '+', and '-'

Standard operator precedences .i.e. PEMDAS is maintained. (See: http://en.wikipedia.org/wiki/Order_of_operations#Mnemonics)

Example:: for the following table :

name doll cent
bob  57   32  
far  77   98  

A valid expression for column four (say, "total") woud be: doll+(cent/100).

or, anything as long as it contains nothing else than names of existing columns, numbers, and the allowed set of operators.

Mathematically invalid expressions like :

*doll++cent
doll+(cent/100
(doll+cent))

will not be evaluated and an appriopriate error message will be shown.

As of com_sheet v0.4 beta, formulae columns can be added only as the last column in the current table.
i.e. you can't insert a formulae column anywhere except as the last column.
Although, more columns can be added after that.

Formulaes can't be edited after the column has been created.
Data in formulae fields can be edited, but a warning is shown.

Each time a new row is added, the contents of fx column(s) (if any) for that corresponding
row will be automatically generated.
But, if column names that constitute a formulae is edited, the respective formulae will become void.
As, formulaes internally are stored in the direct form they are given, there'll 
be no way to resolve the column name to its corresponding neumeric data if it is changed.
Hence, do not edit column names that have been used in formulaes.
Also, fields that are used to evaluate a formulae, if changed, the corresponding results will not be updated.
[ This limitations are to be abolished in the later version ]

Formulaes in the existing spreadsheet will be preserved if saved in com_sheet
parsable format (with wrp).
